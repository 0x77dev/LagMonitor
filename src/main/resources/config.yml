# ${project.name} main config

# By hooking into the network management of Minecraft we can read how many bytes
# the server is receiving or is sending.
traffic-counter: true

# If this option is enabled, this plugin will check for events which should run on the main
# thread. If this not the cause the plugin will throw an exception to inform you. Therefore
# you can detect thread-safety issues which could end up in ConcurrentModificationExceptions
# or other issues.
thread-safety-check: false

# Check peridically if a server (especially a plugin) is doing block I/O operations on the main Thread.
# Operations like SQL-, HTTP-Request or Scoket-Connections should be performed in a seperate Thread.
# If this is not the case, the server will wait for the response and therefore causes lags.
thread-block-detection: false

# This is a more efficient system as the method above (thread-block detection)
# By setting a new security manager we can receive the operations above as events and don't have
# to check it peridically.
# Warning: this may override the existing security manager which could be set by your hoster
securityMangerBlockingCheck: false

# With this options it's possible to access more native features of the OS like:
# * CPU MHZ
# * File reads/writes (per second or since startup)
# * Network download/upload (per second or since startup)
# * OS uptime
# * Network adapter speed
# * RAM cache
# * CPU i/o wait percentage
#
# This makes it possible to use graphs also for these infos. Similar to the Ubuntu util:
# System load indicator: http://i.imgur.com/sxTfTjB.png
#
# Download it from here: https://support.hyperic.com/display/SIGAR/Home#Home-download
# Then place the driver for your OS into the plugin folder where this config is located.
# You can find the drivers in the zip file in the folder "hyperic-sigar-1.6.4/sigar-bin/lib"
#
# If you don't know which driver you need, you can invoke /env or activate this option and
# invoke /hardware - This plugin will show which driver it exactly want.
native-library: false